# Prompt for Zsh

autoload colors && colors

git_branch() {
  echo $(git symbolic-ref HEAD 2>/dev/null | awk -F/ {'print $NF'})
}

# This assumes that you always have an origin named `origin`, and that you only
# care about one specific origin. If this is not the case, you might want to use
# `git cherry -v @{upstream}` instead.
need_push () {
  if [ $(git rev-parse --is-inside-work-tree 2>/dev/null) ]
  then
    number=$(git cherry -v origin/$(git symbolic-ref --short HEAD) 2>/dev/null | wc -l | bc)

    if [[ $number == 0 ]]
    then
      echo " "
    else
      echo " with %{$fg_bold[magenta]%}$number unpushed%{$reset_color%}"
    fi
  fi
}

git_prompt() {
  if $(! git status -s &> /dev/null)
  then
    echo ""
  else
    if [[ $(git status --porcelain) == "" ]]
    then
      echo " on %{$fg_bold[green]%}$(git_branch)%{$reset_color%}$(need_push)"
    else
      echo " on %{$fg_bold[red]%}$(git_branch)%{$reset_color%}$(need_push)"
    fi
  fi
}

directory_name() {
  echo "%{$fg_bold[cyan]%}%1/%\/%{$reset_color%}"
}

current_time() {
  echo "%{$fg_bold[green]%}%}%*%{$reset_color%}"
}

set_prompt () {
  local NEWLINE=$'\n'
  export PROMPT="${NEWLINE}$(current_time) in $(directory_name)$(git_prompt)${NEWLINE}â€º "
  export RPROMPT="%{$fg_bold[cyan]%}%{$reset_color%}"
}

precmd() {
  set_prompt
}